/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.generated.openapi.pet.api;

import ru.generated.openapi.pet.model.Error;
import ru.generated.openapi.pet.model.Pet;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-03-22T21:07:33.818701800+03:00[Europe/Moscow]")
@Validated
@Tag(name = "pets", description = "the pets API")
public interface PetsApi {

    /**
     * POST /pets : Create a pet
     *
     * @return Null response (status code 201)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "createPets",
        summary = "Create a pet",
        tags = { "pets" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Null response"),
            @ApiResponse(responseCode = "200", description = "unexpected error", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  Error.class)))
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/pets",
        produces = { "application/json" }
    )
    ResponseEntity<Void> createPets(
        
    );


    /**
     * GET /pets : List all pets
     *
     * @param limit How many items to return at one time (max 100) (optional)
     * @return A paged array of pets (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "listPets",
        summary = "List all pets",
        tags = { "pets" },
        responses = {
            @ApiResponse(responseCode = "200", description = "A paged array of pets", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  Pet.class))),
            @ApiResponse(responseCode = "200", description = "unexpected error", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  Error.class)))
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/pets",
        produces = { "application/json" }
    )
    ResponseEntity<List<Pet>> listPets(
        @Parameter(name = "limit", description = "How many items to return at one time (max 100)", schema = @Schema(description = "")) @Valid @RequestParam(value = "limit", required = false) Integer limit
    );


    /**
     * GET /pets/{petId} : Info for a specific pet
     *
     * @param petId The id of the pet to retrieve (required)
     * @return Expected response to a valid request (status code 200)
     *         or unexpected error (status code 200)
     */
    @Operation(
        operationId = "showPetById",
        summary = "Info for a specific pet",
        tags = { "pets" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Expected response to a valid request", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  Pet.class))),
            @ApiResponse(responseCode = "200", description = "unexpected error", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  Error.class)))
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/pets/{petId}",
        produces = { "application/json" }
    )
    ResponseEntity<Pet> showPetById(
        @Parameter(name = "petId", description = "The id of the pet to retrieve", required = true, schema = @Schema(description = "")) @PathVariable("petId") String petId
    );

}
